{
    "contractName": "SpookySwapperTest",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "log_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "log_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "name": "log_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "name": "log_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "val",
                    "type": "address"
                }
            ],
            "name": "log_named_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "val",
                    "type": "bytes"
                }
            ],
            "name": "log_named_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "val",
                    "type": "bytes32"
                }
            ],
            "name": "log_named_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                }
            ],
            "name": "log_named_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "val",
                    "type": "string"
                }
            ],
            "name": "log_named_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                }
            ],
            "name": "log_named_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "log_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "logs",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "IS_TEST",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "failed",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "setUp",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testLender",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testSwap",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testLender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/chinmay/ethonline/88mph/Phantasm/src/test/SpookySwap.t.sol\":\"SpookySwapperTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/chinmay/ethonline/88mph/Phantasm/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x529f30c5939d75689f6a982f7f96b8898bed30bd90ec5b385b57cab681e12b00\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://89075d5a96e87acef1d00cf556b409d1836728ec2e92f5629ceb5cae3d1e4354\",\"dweb:/ipfs/QmPAViJrxffEDns9GEMVSAzmr3soAzfrEg1CVuovwmNfnt\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/SpookySwap.sol\":{\"keccak256\":\"0x68101d8b11328cad7a9754014b57d24a4e238bc3acd099b4ee87dd44642e6cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a33e556369d4a348e47033526bcb79ea52b8ee67c40238d96b9f73d450ad1680\",\"dweb:/ipfs/QmX3tWKnbVNUpuiB3tAv7YooPuzdqH3c4WPxE4BDQjWPbn\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/geistImplementation.sol\":{\"keccak256\":\"0x32b08f227e95e40c7c63db012a1562dc9cd72b291380f759fd347272f6626c47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24f36e009e9df49970bec38202955544c050b19801d55612cfcad24a1868eb8a\",\"dweb:/ipfs/QmcWFKtkSMTZcUX5cwUNscBnhTkeXF3y27Z2dDQXg9RyXo\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IAave.sol\":{\"keccak256\":\"0x84c7fe50618a5a2e13a7e5452f6e4525501c3c32b80f59b12ce263acfeda4c31\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://fb14fc46e5e4733964239f48b513be96189b4aa7f74fe3b274b4cfff53a5fbe1\",\"dweb:/ipfs/QmNpfNvZRfrV67tphg3ovsugWS3CK7hETv1ymWxhE2PyUC\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/ICompound.sol\":{\"keccak256\":\"0x1b979cad70d0ff47cc7606d33b96bcc18119ae948dabb1fe4ba501c4f56309d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b25e6592e0dfc74a64a927fa207d70875f0a81f285bf6ea617ae57b0d36eb1ae\",\"dweb:/ipfs/QmevfadbQvkpx1QrYNkzLg8aSExy6cbRqXJCYeFpSrmoYC\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xcf55d265592e8b07ff8cad8c4d3db2e9ccca3dbc066cec5b9a6ca10de1624960\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a353382a5d1ee61672e2014b52aafa1c9147c3739119195eadfeb83b69d921f6\",\"dweb:/ipfs/QmZ2Wx6SgCsANjRHHbyj8vEGwemVGDn1H5vRVuiJpUGCHV\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/ILendingPool.sol\":{\"keccak256\":\"0xcf44ec45c559600baee358b844213c286b1573cf2f82f1f1edfd75e85f2492ab\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f91739c27b999e94630f7d16fa101ad616a6b30a91d3eb27afc6a1319f65dada\",\"dweb:/ipfs/Qmadu2gn7Rt9fJZAnQJDGkUD5yfUZxv1XGBRv53f7zscrT\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IPhantasm.sol\":{\"keccak256\":\"0x8fdfc61d06d5d10994d15a6309d7270b44331f6ea933809bb562800d20344fd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2df8b7d1bb924c75b55701e1bf567cb270a4a9edf37cd6fa9c62e1b670d6a0\",\"dweb:/ipfs/QmY3D5P2YPFUKvt1Kd1PQZkLvSrDPmBLBEJFFdZGQaNKxQ\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/ISwapImplementation.sol\":{\"keccak256\":\"0x61ae72afd7ed77855a326efcdf5ddbbce735553bdbca7b1f5d742ad2d5bfeb86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7a768c9ecd518793d85659888e07e31a746b07fc1144ae102467b2cf91525ae\",\"dweb:/ipfs/QmbfH1Z3wmktdEiXBUNZeEgYojXUX76YnuuFg99aGyBEeT\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IUniswapV2.sol\":{\"keccak256\":\"0xb39a628acfc555d3ac2330e015272eaf1fb08266b65fc64d2818c0ae84fa9645\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0bdad7b105443398614f5dc51d7d4e07fec3b8086d9f8136b888f3bf52baa3c6\",\"dweb:/ipfs/QmYzqp5MP2fiJoKnHqsSodpasmKuqyz2kjh6MH72ncq4by\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IlendingPoolAddressesProvider.sol\":{\"keccak256\":\"0x2c76b1c79c4cf3552fb6f89ddfc5c220c2b8cf97c93b9772bb80b67a70d0ccdf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://9dc7cc142b2b613c3e17b3c22c7f0e4341789caa21665e134e7214e35aa4b358\",\"dweb:/ipfs/QmVdL4tZZttw8G9c2UDt9DToD7ENWnVZkAf8uJCiMT99BP\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/libraries/DataTypes.sol\":{\"keccak256\":\"0x3cc39e1014715779058dca1e9a80bd14b16df2600fbacd523779a4b377aa7bbb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://dc490565a1065a5800b68954f589d14c8c86b646a5df05acbed4cf5854c73082\",\"dweb:/ipfs/QmWEXUC9TqoVeeXL2gQcUszxhMAUupnVrijJoToAEZUwPW\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/test/SpookySwap.t.sol\":{\"keccak256\":\"0x60b056c482d85d1c138c52e5c01d30230547377ed7c7628494d87eb65323ed79\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://24a64c09f11d09d1860211f52789cffb4015d3304373da464733a3c1dba74fd1\",\"dweb:/ipfs/QmTu3Rd7zkLog9jbfog9mxhtDUxJKg66zeKeA1VUS6Z8Hf\"]},\"/home/chinmay/ethonline/88mph/Phantasm/src/test/utils/console.sol\":{\"keccak256\":\"0xb4af34324aac35ab24b50f00d073d31b4442400e551fc640a118d541946e7723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a7e6742d684b65daa46508f435fb2ba7bb68ab8290457ff06ff173c6bf817f\",\"dweb:/ipfs/Qmco6L3tpNjXxmvPB49JYT2L98wenDtvsiSqfxmTkqzXV4\"]}},\"version\":1}",
    "bytecode": "60806040526000805460ff19166001179055600580546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905534801561004357600080fd5b50613293806100536000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630a9254e41461005c57806355db943c146100665780636e008a031461006e578063ba414fa614610076578063fa7626d41461009c575b600080fd5b6100646100a9565b005b61006461019d565b6100646104bd565b60005461008890610100900460ff1681565b604051901515815260200160405180910390f35b6000546100889060ff1681565b6040516100b590610cba565b604051809103906000f0801580156100d1573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405161010490610cc7565b604051809103906000f080158015610120573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b0319928316179055600280548216738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e179055600380548216736c021ae822bea943b2e66552bde1d2696a53fbb7179055600480549091167321be370d5312f44cb42ce377bc9b8a0cef1a4c83179055565b6005546040516303223eab60e11b8152736ab30d124cf23aeaed9aff8887b2e73f034796ca60048201526001600160a01b03909116906306447d5690602401600060405180830381600087803b1580156101f657600080fd5b505af115801561020a573d6000803e3d6000fd5b5050604080518082018252600c81526b03230b4903130b630b731b2960a51b602082015260025491516370a0823160e01b815273b6e825727dae1e3886639faa29bacf623e8ed91e60048201526102bb94509092506001600160a01b03909116906370a08231906024015b602060405180830381865afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190610cd4565b610b49565b6102e96040518060400160405280600d81526020016c776520696e206272656f69733160981b815250610b92565b60015460405163095ea7b360e01b81526001600160a01b0390911660048201526103e86024820152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e9063095ea7b3906044016020604051808303816000875af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610ced565b506103a26040518060400160405280600d81526020016c616674657220617070726f766560981b815250610b92565b6001546040516311f9fbc960e21b8152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e60048201526103e860248201526001600160a01b03909116906347e7ef2490604401600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050506104466040518060400160405280600a815260200169776520696e20626f697360b01b815250610b92565b600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561049657600080fd5b505af11580156104aa573d6000803e3d6000fd5b505050506104bb6002600110610bd8565b565b6005546040516303223eab60e11b81527302517411f32ac2481753ad3045ca19d58e448a0160048201526001600160a01b03909116906306447d5690602401600060405180830381600087803b15801561051657600080fd5b505af115801561052a573d6000803e3d6000fd5b505060035460405163a9059cbb60e01b815273ddf169bf228e6d6e701180e2e6f290739663a7846004820152620186a060248201526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b99190610ced565b50600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b50506005546040516303223eab60e11b815273ddf169bf228e6d6e701180e2e6f290739663a78460048201526001600160a01b0390911692506306447d569150602401600060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b5050604080518082018252600d81526c02a27a6a1103130b630b731b29609d1b602082015260035491516370a0823160e01b815273ddf169bf228e6d6e701180e2e6f290739663a78460048201526106ff94509092506001600160a01b03909116906370a0823190602401610275565b60005460405163095ea7b360e01b8152620100009091046001600160a01b031660048201526127106024820152736c021ae822bea943b2e66552bde1d2696a53fbb79063095ea7b3906044016020604051808303816000875af115801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610ced565b5060005460405163095ea7b360e01b8152620100009091046001600160a01b031660048201526127106024820152736c021ae822bea943b2e66552bde1d2696a53fbb79063095ea7b3906044016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610ced565b50604080518082018252601781527f4265666f72652073776170206461692062616c616e6365000000000000000000602082015260025491516370a0823160e01b8152306004820152610883926001600160a01b0316906370a0823190602401610275565b604080518082018252601881527f4265666f7265207377617020544f4d422062616c616e63650000000000000000602082015260035491516370a0823160e01b81523060048201526108e7926001600160a01b0316906370a0823190602401610275565b60008054604051632ce726f160e21b8152736c021ae822bea943b2e66552bde1d2696a53fbb76004820152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e6024820152612710604482015260648101929092523060848301526201000090046001600160a01b03169063b39c9bc49060a401600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b505050506109c060405180604001604052806012815260200171616674657220737761702062616c616e636560701b815250610b92565b6003546040516370a0823160e01b8152306004820152610a34916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190610cd4565b610c58565b6002546040516370a0823160e01b8152306004820152610a66916001600160a01b0316906370a08231906024016109ee565b600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ab657600080fd5b505af1158015610aca573d6000803e3d6000fd5b50506002546040516370a0823160e01b81523060048201526104bb935061271092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b429190610cd4565b1015610bd8565b610b8e8282604051602401610b5f929190610d63565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610c99565b5050565b610bd581604051602401610ba69190610d85565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610c99565b50565b80610bd5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c3c9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610bd56000805461ff001916610100179055565b610bd581604051602401610c6e91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610a0280610d9983390190565b611ac38061179b83390190565b600060208284031215610ce657600080fd5b5051919050565b600060208284031215610cff57600080fd5b81518015158114610d0f57600080fd5b9392505050565b6000815180845260005b81811015610d3c57602081850181015186830182015201610d20565b81811115610d4e576000602083870101525b50601f01601f19169290920160200192915050565b604081526000610d766040830185610d16565b90508260208301529392505050565b602081526000610d0f6020830184610d1656fe6080604052600080546001600160a01b031990811673f491e7b69e4244ad4002bc14e878a34207e38c2917909155600180549091167321be370d5312f44cb42ce377bc9b8a0cef1a4c8317905534801561005857600080fd5b5061099a806100686000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321dbe8761461005157806350420d8114610081578063b39c9bc4146100a2578063cdbacb20146100b7575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046106df565b6100ca565b604051908152602001610078565b6100b56100b036600461071b565b6102f1565b005b600054610064906001600160a01b031681565b6001546000906060906001600160a01b03868116911614806100f957506001546001600160a01b038581169116145b1561018b576040805160028082526060820183529091602083019080368337019050509050848160008151811061013257610132610788565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061016657610166610788565b60200260200101906001600160a01b031690816001600160a01b031681525050610245565b60408051600380825260808201909252906020820160608036833701905050905084816000815181106101c0576101c0610788565b6001600160a01b03928316602091820292909201015260018054835192169183919081106101f0576101f0610788565b60200260200101906001600160a01b031690816001600160a01b031681525050838160028151811061022457610224610788565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6000805460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f9061027890879086906004016107e2565b600060405180830381865afa158015610295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610803565b905080600183516102ce91906108c1565b815181106102de576102de610788565b6020026020010151925050509392505050565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038616906323b872dd906064016020604051808303816000875af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906108e6565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e091906108e6565b506001546060906001600160a01b038781169116148061040d57506001546001600160a01b038681169116145b1561049f576040805160028082526060820183529091602083019080368337019050509050858160008151811061044657610446610788565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061047a5761047a610788565b60200260200101906001600160a01b031690816001600160a01b031681525050610559565b60408051600380825260808201909252906020820160608036833701905050905085816000815181106104d4576104d4610788565b6001600160a01b039283166020918202929092010152600180548351921691839190811061050457610504610788565b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061053857610538610788565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6000546040516338ed173960e01b81526001600160a01b03909116906338ed173990610591908790879086908890429060040161090f565b6000604051808303816000875af11580156105b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d89190810190610803565b506040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b919061094b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba91906108e6565b50505050505050565b80356001600160a01b03811681146106da57600080fd5b919050565b6000806000606084860312156106f457600080fd5b6106fd846106c3565b925061070b602085016106c3565b9150604084013590509250925092565b600080600080600060a0868803121561073357600080fd5b61073c866106c3565b945061074a602087016106c3565b93506040860135925060608601359150610766608087016106c3565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156107d75781516001600160a01b0316875295820195908201906001016107b2565b509495945050505050565b8281526040602082015260006107fb604083018461079e565b949350505050565b6000602080838503121561081657600080fd5b825167ffffffffffffffff8082111561082e57600080fd5b818501915085601f83011261084257600080fd5b81518181111561085457610854610772565b8060051b604051601f19603f8301168101818110858211171561087957610879610772565b60405291825284820192508381018501918883111561089757600080fd5b938501935b828510156108b55784518452938501939285019261089c565b98975050505050505050565b6000828210156108e157634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156108f857600080fd5b8151801515811461090857600080fd5b9392505050565b85815284602082015260a06040820152600061092e60a083018661079e565b6001600160a01b0394909416606083015250608001529392505050565b60006020828403121561095d57600080fd5b505191905056fea26469706673582212203c0e9b71cb42bdcfd60eaebe99e9db8c4710c2e39c85326734930e2ae132387c64736f6c634300080b00336080604052600080546001600160a01b031916739fad24f572045c7869117160a571b2e50b10d06817905534801561003657600080fd5b50611a7d806100466000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806347e7ef241161005b57806347e7ef24146101155780635265979414610128578063e0bab4c41461013b578063fe72ce221461015057600080fd5b806321dbe8761461008d57806327887ae4146100c557806330802ff7146100ed57806336828b3c14610102575b600080fd5b6100a87321be370d5312f44cb42ce377bc9b8a0cef1a4c8381565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86100d33660046116ef565b610163565b604080519283526020830191909152016100bc565b6101006100fb36600461173c565b6104ea565b005b610100610110366004611791565b61066a565b6101006101233660046117b3565b61090a565b6100d86101363660046116ef565b610d82565b6100a8600080516020611a0883398151915281565b61010061015e3660046117b3565b611109565b6040516323b872dd60e01b81526000908190600080516020611a08833981519152906323b872dd9061019d90339030908a906004016117dd565b6020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190611801565b5060005460405163095ea7b360e01b8152600080516020611a088339815191529163095ea7b39161021f916001600160a01b031690899060040161182a565b6020604051808303816000875af115801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190611801565b5061027b600080516020611a088339815191528661090a565b600054604051635a3b74b960e01b8152600080516020611a088339815191526004820152600160248201526001600160a01b0390911690635a3b74b990604401600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b50869250600091508790508160646103018886611859565b61030b9190611878565b90506103178b82611453565b610321818461189a565b60405163095ea7b360e01b81529093506001600160a01b038c169063095ea7b390610352908d90859060040161182a565b6020604051808303816000875af1158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190611801565b5060405163d5bcb9b560e01b81526001600160a01b038c81166004830152600080516020611a0883398151915260248301526044820183905260016064830152306084830152600091908c169063d5bcb9b59060a4016020604051808303816000875af115801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e91906118b2565b60005460405163095ea7b360e01b8152919250600080516020611a088339815191529163095ea7b391610471916001600160a01b0390911690859060040161182a565b6020604051808303816000875af1158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611801565b506104cd600080516020611a088339815191528261090a565b6104d7818461189a565b939c939b50929950505050505050505050565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd9061051a903390309087906004016117dd565b6020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611801565b5060005460405163095ea7b360e01b81526001600160a01b038781169263095ea7b3926105929290911690869060040161182a565b6020604051808303816000875af11580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190611801565b506105e085836114d2565b5060006105ed858361155f565b60405163a9059cbb60e01b81529091506001600160a01b0386169063a9059cbb9061061e903390869060040161182a565b6020604051808303816000875af115801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190611801565b50505050505050565b61068c604051806040016040528060018152602001603160f81b8152506115e6565b6040516323b872dd60e01b8152600080516020611a08833981519152906323b872dd906106c1903390309087906004016117dd565b6020604051808303816000875af11580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611801565b50610727604051806040016040528060018152602001601960f91b8152506115e6565b60005460405163095ea7b360e01b8152600080516020611a088339815191529163095ea7b391610765916001600160a01b031690869060040161182a565b6020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611801565b5060405163095ea7b360e01b8152600080516020611a088339815191529063095ea7b3906107dc903090869060040161182a565b6020604051808303816000875af11580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190611801565b50610838600080516020611a088339815191528361090a565b61085a604051806040016040528060018152602001600d60fa1b8152506115e6565b600054604051635a3b74b960e01b8152600080516020611a088339815191526004820152600160248201526001600160a01b0390911690635a3b74b990604401600060405180830381600087803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b505050506108ee604051806040016040528060018152602001603560f81b8152506115e6565b610906600080516020611a0883398151915282611453565b5050565b60008054604051632fe4a15f60e21b8152336004820152600080516020611a088339815191529291829182918291829182916001600160a01b039091169063bf92857c9060240160c060405180830381865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099291906118cb565b9550955095509550955095506109cb604051806040016040528060198152602001600080516020611a288339815191528152508761162c565b6109f8604051806040016040528060198152602001600080516020611a288339815191528152508661162c565b610a25604051806040016040528060198152602001600080516020611a288339815191528152508561162c565b610a52604051806040016040528060198152602001600080516020611a288339815191528152508461162c565b610a7f604051806040016040528060198152602001600080516020611a288339815191528152508361162c565b610aac604051806040016040528060198152602001600080516020611a288339815191528152508261162c565b604080518082018252601c81527f4461692062616c616e6365206f66206765697374204c656e6465722000000000602082015260005491516370a0823160e01b81526001600160a01b039283166004820152610b55928a16906370a08231906024015b602060405180830381865afa158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5091906118b2565b61162c565b604080518082018252601281527102230b4903130b630b731b29030b33a32b9160751b602082015290516370a0823160e01b8152306004820152610bad91906001600160a01b038a16906370a0823190602401610b0f565b60408051808201909152600d81526c033b2b4b9ba103632b73232b91609d1b6020820152600054610be791906001600160a01b0316611671565b60005460405163095ea7b360e01b81526001600160a01b038b81169263095ea7b392610c1b92909116908c9060040161182a565b6020604051808303816000875af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e9190611801565b50610c8e6040518060400160405280600d81526020016c1859191c995cdcc81d1a1a5cd9609a1b81525030611671565b60408051808201909152601b81527f696e73696465206465706f7369742066746d2062616c616e63652000000000006020820152610ccd90333161162c565b6000805460405163e8eda9df60e01b81526001600160a01b038c81166004830152602482018c9052736ab30d124cf23aeaed9aff8887b2e73f034796ca6044830152606482019390935291169063e8eda9df90608401600060405180830381600087803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b50505050610d776040518060600160405280602b81526020016119dd602b913933611671565b505050505050505050565b600080866001600160a01b03166323b872dd3330886040518463ffffffff1660e01b8152600401610db5939291906117dd565b6020604051808303816000875af1158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df89190611801565b5060005460405163095ea7b360e01b81526001600160a01b038981169263095ea7b392610e2d9290911690899060040161182a565b6020604051808303816000875af1158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190611801565b50610e7b878661090a565b600054604051635a3b74b960e01b81526001600160a01b0389811660048301526001602483015290911690635a3b74b990604401600060405180830381600087803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b5087925060009150829050815b60038110156110f95760006064610f018987611859565b610f0b9190611878565b9050610f25600080516020611a0883398151915282611453565b610f2f818561189a565b60405163095ea7b360e01b8152909450600080516020611a088339815191529063095ea7b390610f65908e90859060040161182a565b6020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa89190611801565b5060405163d5bcb9b560e01b8152600080516020611a0883398151915260048201526001600160a01b038d811660248301526044820183905260016064830152306084830152600091908d169063d5bcb9b59060a4016020604051808303816000875af115801561101d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104191906118b2565b905060008190508d6001600160a01b031663095ea7b360008054906101000a90046001600160a01b0316846040518363ffffffff1660e01b815260040161108992919061182a565b6020604051808303816000875af11580156110a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cc9190611801565b506110d78e8361090a565b6110e1828661189a565b945050505080806110f190611915565b915050610eea565b5090999098509650505050505050565b6000546040516323b872dd60e01b81527321be370d5312f44cb42ce377bc9b8a0cef1a4c83916001600160a01b03808616926323b872dd9261115492339291169087906004016117dd565b6020604051808303816000875af1158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190611801565b50604080518082018252601581527403bb33a36903130b630b731b29037b3103a3434b99605d1b602082015290516370a0823160e01b81523060048201526111f391906001600160a01b038416906370a0823190602401610b0f565b60408051808201825260158152741dd99d1b4818985b185b98d9481bd98819d95a5cdd605a1b602082015260005491516370a0823160e01b81526001600160a01b039283166004820152611252928416906370a0823190602401610b0f565b60408051808201909152600d81526c033b2b4b9ba103632b73232b91609d1b602082015260005461128c91906001600160a01b0316611671565b60005460405163095ea7b360e01b81526001600160a01b038581169263095ea7b3926112c09290911690869060040161182a565b6020604051808303816000875af11580156112df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113039190611801565b506113336040518060400160405280600d81526020016c1859191c995cdcc81d1a1a5cd9609a1b81525030611671565b60408051808201909152601b81527f696e73696465206465706f7369742066746d2062616c616e6365200000000000602082015261137290333161162c565b6000805460405163e8eda9df60e01b81526001600160a01b0386811660048301526024820186905273cdc39431bfa67bcfdd6158be5a74ae1cd37bd1d16044830152606482019390935291169063e8eda9df90608401600060405180830381600087803b1580156113e257600080fd5b505af11580156113f6573d6000803e3d6000fd5b5050505061141c6040518060600160405280602b81526020016119dd602b913933611671565b61144e6040518060400160405280601081526020016f34b739b4b232903232b837b9b4ba101960811b81525033611671565b505050565b6000805460405163a415bcad60e01b81526001600160a01b0385811660048301526024820185905260026044830152606482019390935230608482015291169063a415bcad9060a401600060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050505050565b6000805460405163573ade8160e01b81526001600160a01b03858116600483015260248201859052600260448301523060648301528392169063573ade81906084016020604051808303816000875af1158015611533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155791906118b2565b949350505050565b60008054604051631a4ca37b60e21b81526001600160a01b03858116600483015260248201859052306044830152839216906369328dec906064016020604051808303816000875af11580156115b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dd91906118b2565b90505092915050565b611629816040516024016115fa919061197d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526116b2565b50565b6109068282604051602401611642929190611990565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526116b2565b61090682826040516024016116879291906119b2565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b03811681146116ea57600080fd5b919050565b600080600080600060a0868803121561170757600080fd5b611710866116d3565b945061171e602087016116d3565b94979496505050506040830135926060810135926080909101359150565b600080600080600060a0868803121561175457600080fd5b61175d866116d3565b945061176b602087016116d3565b9350611779604087016116d3565b94979396509394606081013594506080013592915050565b600080604083850312156117a457600080fd5b50508035926020909101359150565b600080604083850312156117c657600080fd5b6117cf836116d3565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561181357600080fd5b8151801515811461182357600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561187357611873611843565b500290565b60008261189557634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156118ad576118ad611843565b500190565b6000602082840312156118c457600080fd5b5051919050565b60008060008060008060c087890312156118e457600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060001982141561192957611929611843565b5060010190565b6000815180845260005b818110156119565760208185018101518683018201520161193a565b81811115611968576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006118236020830184611930565b6040815260006119a36040830185611930565b90508260208301529392505050565b6040815260006119c56040830185611930565b905060018060a01b0383166020830152939250505056fe696e73696465206465706f736974206166746572207472616e73666572206461692062616c616e636563200000000000000000000000008d11ec38a3eb5e956b052f67da8bdc9bef8abf3e4461692062616c616e63652062656f6672666565207472612000000000000000a26469706673582212209f08a98edf8e964912c2a243cc11a8fd703589846b6d88076ca0410f8d2e05f864736f6c634300080b0033a2646970667358221220c8a91c7f8e3aee345c2aff7c0b95691f632d8a63a8b0737afc98391c3e4a6c6564736f6c634300080b0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630a9254e41461005c57806355db943c146100665780636e008a031461006e578063ba414fa614610076578063fa7626d41461009c575b600080fd5b6100646100a9565b005b61006461019d565b6100646104bd565b60005461008890610100900460ff1681565b604051901515815260200160405180910390f35b6000546100889060ff1681565b6040516100b590610cba565b604051809103906000f0801580156100d1573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060405161010490610cc7565b604051809103906000f080158015610120573d6000803e3d6000fd5b50600180546001600160a01b03929092166001600160a01b0319928316179055600280548216738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e179055600380548216736c021ae822bea943b2e66552bde1d2696a53fbb7179055600480549091167321be370d5312f44cb42ce377bc9b8a0cef1a4c83179055565b6005546040516303223eab60e11b8152736ab30d124cf23aeaed9aff8887b2e73f034796ca60048201526001600160a01b03909116906306447d5690602401600060405180830381600087803b1580156101f657600080fd5b505af115801561020a573d6000803e3d6000fd5b5050604080518082018252600c81526b03230b4903130b630b731b2960a51b602082015260025491516370a0823160e01b815273b6e825727dae1e3886639faa29bacf623e8ed91e60048201526102bb94509092506001600160a01b03909116906370a08231906024015b602060405180830381865afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b69190610cd4565b610b49565b6102e96040518060400160405280600d81526020016c776520696e206272656f69733160981b815250610b92565b60015460405163095ea7b360e01b81526001600160a01b0390911660048201526103e86024820152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e9063095ea7b3906044016020604051808303816000875af115801561034f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103739190610ced565b506103a26040518060400160405280600d81526020016c616674657220617070726f766560981b815250610b92565b6001546040516311f9fbc960e21b8152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e60048201526103e860248201526001600160a01b03909116906347e7ef2490604401600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050506104466040518060400160405280600a815260200169776520696e20626f697360b01b815250610b92565b600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561049657600080fd5b505af11580156104aa573d6000803e3d6000fd5b505050506104bb6002600110610bd8565b565b6005546040516303223eab60e11b81527302517411f32ac2481753ad3045ca19d58e448a0160048201526001600160a01b03909116906306447d5690602401600060405180830381600087803b15801561051657600080fd5b505af115801561052a573d6000803e3d6000fd5b505060035460405163a9059cbb60e01b815273ddf169bf228e6d6e701180e2e6f290739663a7846004820152620186a060248201526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b99190610ced565b50600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b50506005546040516303223eab60e11b815273ddf169bf228e6d6e701180e2e6f290739663a78460048201526001600160a01b0390911692506306447d569150602401600060405180830381600087803b15801561067b57600080fd5b505af115801561068f573d6000803e3d6000fd5b5050604080518082018252600d81526c02a27a6a1103130b630b731b29609d1b602082015260035491516370a0823160e01b815273ddf169bf228e6d6e701180e2e6f290739663a78460048201526106ff94509092506001600160a01b03909116906370a0823190602401610275565b60005460405163095ea7b360e01b8152620100009091046001600160a01b031660048201526127106024820152736c021ae822bea943b2e66552bde1d2696a53fbb79063095ea7b3906044016020604051808303816000875af115801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190610ced565b5060005460405163095ea7b360e01b8152620100009091046001600160a01b031660048201526127106024820152736c021ae822bea943b2e66552bde1d2696a53fbb79063095ea7b3906044016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190610ced565b50604080518082018252601781527f4265666f72652073776170206461692062616c616e6365000000000000000000602082015260025491516370a0823160e01b8152306004820152610883926001600160a01b0316906370a0823190602401610275565b604080518082018252601881527f4265666f7265207377617020544f4d422062616c616e63650000000000000000602082015260035491516370a0823160e01b81523060048201526108e7926001600160a01b0316906370a0823190602401610275565b60008054604051632ce726f160e21b8152736c021ae822bea943b2e66552bde1d2696a53fbb76004820152738d11ec38a3eb5e956b052f67da8bdc9bef8abf3e6024820152612710604482015260648101929092523060848301526201000090046001600160a01b03169063b39c9bc49060a401600060405180830381600087803b15801561097557600080fd5b505af1158015610989573d6000803e3d6000fd5b505050506109c060405180604001604052806012815260200171616674657220737761702062616c616e636560701b815250610b92565b6003546040516370a0823160e01b8152306004820152610a34916001600160a01b0316906370a08231906024015b602060405180830381865afa158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190610cd4565b610c58565b6002546040516370a0823160e01b8152306004820152610a66916001600160a01b0316906370a08231906024016109ee565b600560009054906101000a90046001600160a01b03166001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ab657600080fd5b505af1158015610aca573d6000803e3d6000fd5b50506002546040516370a0823160e01b81523060048201526104bb935061271092506001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b429190610cd4565b1015610bd8565b610b8e8282604051602401610b5f929190610d63565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052610c99565b5050565b610bd581604051602401610ba69190610d85565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610c99565b50565b80610bd5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c3c9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610bd56000805461ff001916610100179055565b610bd581604051602401610c6e91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610a0280610d9983390190565b611ac38061179b83390190565b600060208284031215610ce657600080fd5b5051919050565b600060208284031215610cff57600080fd5b81518015158114610d0f57600080fd5b9392505050565b6000815180845260005b81811015610d3c57602081850181015186830182015201610d20565b81811115610d4e576000602083870101525b50601f01601f19169290920160200192915050565b604081526000610d766040830185610d16565b90508260208301529392505050565b602081526000610d0f6020830184610d1656fe6080604052600080546001600160a01b031990811673f491e7b69e4244ad4002bc14e878a34207e38c2917909155600180549091167321be370d5312f44cb42ce377bc9b8a0cef1a4c8317905534801561005857600080fd5b5061099a806100686000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806321dbe8761461005157806350420d8114610081578063b39c9bc4146100a2578063cdbacb20146100b7575b600080fd5b600154610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046106df565b6100ca565b604051908152602001610078565b6100b56100b036600461071b565b6102f1565b005b600054610064906001600160a01b031681565b6001546000906060906001600160a01b03868116911614806100f957506001546001600160a01b038581169116145b1561018b576040805160028082526060820183529091602083019080368337019050509050848160008151811061013257610132610788565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061016657610166610788565b60200260200101906001600160a01b031690816001600160a01b031681525050610245565b60408051600380825260808201909252906020820160608036833701905050905084816000815181106101c0576101c0610788565b6001600160a01b03928316602091820292909201015260018054835192169183919081106101f0576101f0610788565b60200260200101906001600160a01b031690816001600160a01b031681525050838160028151811061022457610224610788565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6000805460405163d06ca61f60e01b81526001600160a01b039091169063d06ca61f9061027890879086906004016107e2565b600060405180830381865afa158015610295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102bd9190810190610803565b905080600183516102ce91906108c1565b815181106102de576102de610788565b6020026020010151925050509392505050565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038616906323b872dd906064016020604051808303816000875af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906108e6565b5060005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590529086169063095ea7b3906044016020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e091906108e6565b506001546060906001600160a01b038781169116148061040d57506001546001600160a01b038681169116145b1561049f576040805160028082526060820183529091602083019080368337019050509050858160008151811061044657610446610788565b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061047a5761047a610788565b60200260200101906001600160a01b031690816001600160a01b031681525050610559565b60408051600380825260808201909252906020820160608036833701905050905085816000815181106104d4576104d4610788565b6001600160a01b039283166020918202929092010152600180548351921691839190811061050457610504610788565b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061053857610538610788565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6000546040516338ed173960e01b81526001600160a01b03909116906338ed173990610591908790879086908890429060040161090f565b6000604051808303816000875af11580156105b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d89190810190610803565b506040516370a0823160e01b81523060048201526001600160a01b0386169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b919061094b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba91906108e6565b50505050505050565b80356001600160a01b03811681146106da57600080fd5b919050565b6000806000606084860312156106f457600080fd5b6106fd846106c3565b925061070b602085016106c3565b9150604084013590509250925092565b600080600080600060a0868803121561073357600080fd5b61073c866106c3565b945061074a602087016106c3565b93506040860135925060608601359150610766608087016106c3565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156107d75781516001600160a01b0316875295820195908201906001016107b2565b509495945050505050565b8281526040602082015260006107fb604083018461079e565b949350505050565b6000602080838503121561081657600080fd5b825167ffffffffffffffff8082111561082e57600080fd5b818501915085601f83011261084257600080fd5b81518181111561085457610854610772565b8060051b604051601f19603f8301168101818110858211171561087957610879610772565b60405291825284820192508381018501918883111561089757600080fd5b938501935b828510156108b55784518452938501939285019261089c565b98975050505050505050565b6000828210156108e157634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156108f857600080fd5b8151801515811461090857600080fd5b9392505050565b85815284602082015260a06040820152600061092e60a083018661079e565b6001600160a01b0394909416606083015250608001529392505050565b60006020828403121561095d57600080fd5b505191905056fea26469706673582212203c0e9b71cb42bdcfd60eaebe99e9db8c4710c2e39c85326734930e2ae132387c64736f6c634300080b00336080604052600080546001600160a01b031916739fad24f572045c7869117160a571b2e50b10d06817905534801561003657600080fd5b50611a7d806100466000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806347e7ef241161005b57806347e7ef24146101155780635265979414610128578063e0bab4c41461013b578063fe72ce221461015057600080fd5b806321dbe8761461008d57806327887ae4146100c557806330802ff7146100ed57806336828b3c14610102575b600080fd5b6100a87321be370d5312f44cb42ce377bc9b8a0cef1a4c8381565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d86100d33660046116ef565b610163565b604080519283526020830191909152016100bc565b6101006100fb36600461173c565b6104ea565b005b610100610110366004611791565b61066a565b6101006101233660046117b3565b61090a565b6100d86101363660046116ef565b610d82565b6100a8600080516020611a0883398151915281565b61010061015e3660046117b3565b611109565b6040516323b872dd60e01b81526000908190600080516020611a08833981519152906323b872dd9061019d90339030908a906004016117dd565b6020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190611801565b5060005460405163095ea7b360e01b8152600080516020611a088339815191529163095ea7b39161021f916001600160a01b031690899060040161182a565b6020604051808303816000875af115801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190611801565b5061027b600080516020611a088339815191528661090a565b600054604051635a3b74b960e01b8152600080516020611a088339815191526004820152600160248201526001600160a01b0390911690635a3b74b990604401600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b50869250600091508790508160646103018886611859565b61030b9190611878565b90506103178b82611453565b610321818461189a565b60405163095ea7b360e01b81529093506001600160a01b038c169063095ea7b390610352908d90859060040161182a565b6020604051808303816000875af1158015610371573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103959190611801565b5060405163d5bcb9b560e01b81526001600160a01b038c81166004830152600080516020611a0883398151915260248301526044820183905260016064830152306084830152600091908c169063d5bcb9b59060a4016020604051808303816000875af115801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e91906118b2565b60005460405163095ea7b360e01b8152919250600080516020611a088339815191529163095ea7b391610471916001600160a01b0390911690859060040161182a565b6020604051808303816000875af1158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190611801565b506104cd600080516020611a088339815191528261090a565b6104d7818461189a565b939c939b50929950505050505050505050565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd9061051a903390309087906004016117dd565b6020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611801565b5060005460405163095ea7b360e01b81526001600160a01b038781169263095ea7b3926105929290911690869060040161182a565b6020604051808303816000875af11580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190611801565b506105e085836114d2565b5060006105ed858361155f565b60405163a9059cbb60e01b81529091506001600160a01b0386169063a9059cbb9061061e903390869060040161182a565b6020604051808303816000875af115801561063d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106619190611801565b50505050505050565b61068c604051806040016040528060018152602001603160f81b8152506115e6565b6040516323b872dd60e01b8152600080516020611a08833981519152906323b872dd906106c1903390309087906004016117dd565b6020604051808303816000875af11580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611801565b50610727604051806040016040528060018152602001601960f91b8152506115e6565b60005460405163095ea7b360e01b8152600080516020611a088339815191529163095ea7b391610765916001600160a01b031690869060040161182a565b6020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611801565b5060405163095ea7b360e01b8152600080516020611a088339815191529063095ea7b3906107dc903090869060040161182a565b6020604051808303816000875af11580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081f9190611801565b50610838600080516020611a088339815191528361090a565b61085a604051806040016040528060018152602001600d60fa1b8152506115e6565b600054604051635a3b74b960e01b8152600080516020611a088339815191526004820152600160248201526001600160a01b0390911690635a3b74b990604401600060405180830381600087803b1580156108b457600080fd5b505af11580156108c8573d6000803e3d6000fd5b505050506108ee604051806040016040528060018152602001603560f81b8152506115e6565b610906600080516020611a0883398151915282611453565b5050565b60008054604051632fe4a15f60e21b8152336004820152600080516020611a088339815191529291829182918291829182916001600160a01b039091169063bf92857c9060240160c060405180830381865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099291906118cb565b9550955095509550955095506109cb604051806040016040528060198152602001600080516020611a288339815191528152508761162c565b6109f8604051806040016040528060198152602001600080516020611a288339815191528152508661162c565b610a25604051806040016040528060198152602001600080516020611a288339815191528152508561162c565b610a52604051806040016040528060198152602001600080516020611a288339815191528152508461162c565b610a7f604051806040016040528060198152602001600080516020611a288339815191528152508361162c565b610aac604051806040016040528060198152602001600080516020611a288339815191528152508261162c565b604080518082018252601c81527f4461692062616c616e6365206f66206765697374204c656e6465722000000000602082015260005491516370a0823160e01b81526001600160a01b039283166004820152610b55928a16906370a08231906024015b602060405180830381865afa158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5091906118b2565b61162c565b604080518082018252601281527102230b4903130b630b731b29030b33a32b9160751b602082015290516370a0823160e01b8152306004820152610bad91906001600160a01b038a16906370a0823190602401610b0f565b60408051808201909152600d81526c033b2b4b9ba103632b73232b91609d1b6020820152600054610be791906001600160a01b0316611671565b60005460405163095ea7b360e01b81526001600160a01b038b81169263095ea7b392610c1b92909116908c9060040161182a565b6020604051808303816000875af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e9190611801565b50610c8e6040518060400160405280600d81526020016c1859191c995cdcc81d1a1a5cd9609a1b81525030611671565b60408051808201909152601b81527f696e73696465206465706f7369742066746d2062616c616e63652000000000006020820152610ccd90333161162c565b6000805460405163e8eda9df60e01b81526001600160a01b038c81166004830152602482018c9052736ab30d124cf23aeaed9aff8887b2e73f034796ca6044830152606482019390935291169063e8eda9df90608401600060405180830381600087803b158015610d3d57600080fd5b505af1158015610d51573d6000803e3d6000fd5b50505050610d776040518060600160405280602b81526020016119dd602b913933611671565b505050505050505050565b600080866001600160a01b03166323b872dd3330886040518463ffffffff1660e01b8152600401610db5939291906117dd565b6020604051808303816000875af1158015610dd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df89190611801565b5060005460405163095ea7b360e01b81526001600160a01b038981169263095ea7b392610e2d9290911690899060040161182a565b6020604051808303816000875af1158015610e4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e709190611801565b50610e7b878661090a565b600054604051635a3b74b960e01b81526001600160a01b0389811660048301526001602483015290911690635a3b74b990604401600060405180830381600087803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b5087925060009150829050815b60038110156110f95760006064610f018987611859565b610f0b9190611878565b9050610f25600080516020611a0883398151915282611453565b610f2f818561189a565b60405163095ea7b360e01b8152909450600080516020611a088339815191529063095ea7b390610f65908e90859060040161182a565b6020604051808303816000875af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa89190611801565b5060405163d5bcb9b560e01b8152600080516020611a0883398151915260048201526001600160a01b038d811660248301526044820183905260016064830152306084830152600091908d169063d5bcb9b59060a4016020604051808303816000875af115801561101d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104191906118b2565b905060008190508d6001600160a01b031663095ea7b360008054906101000a90046001600160a01b0316846040518363ffffffff1660e01b815260040161108992919061182a565b6020604051808303816000875af11580156110a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cc9190611801565b506110d78e8361090a565b6110e1828661189a565b945050505080806110f190611915565b915050610eea565b5090999098509650505050505050565b6000546040516323b872dd60e01b81527321be370d5312f44cb42ce377bc9b8a0cef1a4c83916001600160a01b03808616926323b872dd9261115492339291169087906004016117dd565b6020604051808303816000875af1158015611173573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111979190611801565b50604080518082018252601581527403bb33a36903130b630b731b29037b3103a3434b99605d1b602082015290516370a0823160e01b81523060048201526111f391906001600160a01b038416906370a0823190602401610b0f565b60408051808201825260158152741dd99d1b4818985b185b98d9481bd98819d95a5cdd605a1b602082015260005491516370a0823160e01b81526001600160a01b039283166004820152611252928416906370a0823190602401610b0f565b60408051808201909152600d81526c033b2b4b9ba103632b73232b91609d1b602082015260005461128c91906001600160a01b0316611671565b60005460405163095ea7b360e01b81526001600160a01b038581169263095ea7b3926112c09290911690869060040161182a565b6020604051808303816000875af11580156112df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113039190611801565b506113336040518060400160405280600d81526020016c1859191c995cdcc81d1a1a5cd9609a1b81525030611671565b60408051808201909152601b81527f696e73696465206465706f7369742066746d2062616c616e6365200000000000602082015261137290333161162c565b6000805460405163e8eda9df60e01b81526001600160a01b0386811660048301526024820186905273cdc39431bfa67bcfdd6158be5a74ae1cd37bd1d16044830152606482019390935291169063e8eda9df90608401600060405180830381600087803b1580156113e257600080fd5b505af11580156113f6573d6000803e3d6000fd5b5050505061141c6040518060600160405280602b81526020016119dd602b913933611671565b61144e6040518060400160405280601081526020016f34b739b4b232903232b837b9b4ba101960811b81525033611671565b505050565b6000805460405163a415bcad60e01b81526001600160a01b0385811660048301526024820185905260026044830152606482019390935230608482015291169063a415bcad9060a401600060405180830381600087803b1580156114b657600080fd5b505af11580156114ca573d6000803e3d6000fd5b505050505050565b6000805460405163573ade8160e01b81526001600160a01b03858116600483015260248201859052600260448301523060648301528392169063573ade81906084016020604051808303816000875af1158015611533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155791906118b2565b949350505050565b60008054604051631a4ca37b60e21b81526001600160a01b03858116600483015260248201859052306044830152839216906369328dec906064016020604051808303816000875af11580156115b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dd91906118b2565b90505092915050565b611629816040516024016115fa919061197d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526116b2565b50565b6109068282604051602401611642929190611990565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526116b2565b61090682826040516024016116879291906119b2565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b03811681146116ea57600080fd5b919050565b600080600080600060a0868803121561170757600080fd5b611710866116d3565b945061171e602087016116d3565b94979496505050506040830135926060810135926080909101359150565b600080600080600060a0868803121561175457600080fd5b61175d866116d3565b945061176b602087016116d3565b9350611779604087016116d3565b94979396509394606081013594506080013592915050565b600080604083850312156117a457600080fd5b50508035926020909101359150565b600080604083850312156117c657600080fd5b6117cf836116d3565b946020939093013593505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561181357600080fd5b8151801515811461182357600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561187357611873611843565b500290565b60008261189557634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156118ad576118ad611843565b500190565b6000602082840312156118c457600080fd5b5051919050565b60008060008060008060c087890312156118e457600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b600060001982141561192957611929611843565b5060010190565b6000815180845260005b818110156119565760208185018101518683018201520161193a565b81811115611968576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006118236020830184611930565b6040815260006119a36040830185611930565b90508260208301529392505050565b6040815260006119c56040830185611930565b905060018060a01b0383166020830152939250505056fe696e73696465206465706f736974206166746572207472616e73666572206461692062616c616e636563200000000000000000000000008d11ec38a3eb5e956b052f67da8bdc9bef8abf3e4461692062616c616e63652062656f6672666565207472612000000000000000a26469706673582212209f08a98edf8e964912c2a243cc11a8fd703589846b6d88076ca0410f8d2e05f864736f6c634300080b0033a2646970667358221220c8a91c7f8e3aee345c2aff7c0b95691f632d8a63a8b0737afc98391c3e4a6c6564736f6c634300080b0033",
    "sourceMap": "463:3567:12:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;621:54:12;;;-1:-1:-1;;;;;;621:54:12;632:42;621:54;;;463:3567;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "463:3567:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;682:316;;;:::i;:::-;;3314:713;;;:::i;1004:1125::-;;;:::i;1605:18:0:-;;;;;;;;;;;;;;;179:14:14;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;1573:26;;;;;;;;;682:316:12;730:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;716:11;;:33;;;;;-1:-1:-1;;;;;716:33:12;;;;;-1:-1:-1;;;;;716:33:12;;;;;;766:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;759:4:12;:32;;-1:-1:-1;;;;;759:32:12;;;;-1:-1:-1;;;;;;759:32:12;;;;;;801:3;:56;;;;814:42;801:56;;;867:4;:57;;;;881:42;867:57;;;934:4;:57;;;;;948:42;934:57;;;682:316::o;3314:713::-;3360:2;;:57;;-1:-1:-1;;;3360:57:12;;3374:42;3360:57;;;352:51:14;-1:-1:-1;;;;;3360:2:12;;;;:13;;325:18:14;;3360:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3458:86:12;;;;;;;;;;;-1:-1:-1;;;3458:86:12;;;;3486:3;;:57;;-1:-1:-1;;;3486:57:12;;3500:42;3486:57;;;352:51:14;3458:86:12;;-1:-1:-1;3458:86:12;;-1:-1:-1;;;;;;3486:3:12;;;;:13;;325:18:14;;3486:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3458:11;:86::i;:::-;3700:28;;;;;;;;;;;;;;-1:-1:-1;;;3700:28:12;;;:11;:28::i;:::-;3807:4;;3740:79;;-1:-1:-1;;;3740:79:12;;-1:-1:-1;;;;;3807:4:12;;;3740:79;;;788:51:14;3814:4:12;855:18:14;;;848:34;3747:42:12;;3740:58;;761:18:14;;3740:79:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3829:28;;;;;;;;;;;;;;-1:-1:-1;;;3829:28:12;;;:11;:28::i;:::-;3868:4;;:62;;-1:-1:-1;;;3868:62:12;;3881:42;3868:62;;;788:51:14;3925:4:12;855:18:14;;;848:34;-1:-1:-1;;;;;3868:4:12;;;;:12;;761:18:14;;3868:62:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3941:25;;;;;;;;;;;;;;-1:-1:-1;;;3941:25:12;;;:11;:25::i;:::-;3977:2;;;;;;;;;-1:-1:-1;;;;;3977:2:12;-1:-1:-1;;;;;3977:12:12;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4004:15;4017:1;4015;:3;4004:10;:15::i;:::-;3314:713::o;1004:1125::-;1041:2;;:57;;-1:-1:-1;;;1041:57:12;;1055:42;1041:57;;;352:51:14;-1:-1:-1;;;;;1041:2:12;;;;:13;;325:18:14;;1041:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1125:4:12;;1118:73;;-1:-1:-1;;;1118:73:12;;1140:42;1118:73;;;788:51:14;1184:6:12;855:18:14;;;848:34;-1:-1:-1;;;;;1125:4:12;;;;-1:-1:-1;1118:21:12;;-1:-1:-1;761:18:14;;1118:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1203:2;;;;;;;;;-1:-1:-1;;;;;1203:2:12;-1:-1:-1;;;;;1203:12:12;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1228:2:12;;:57;;-1:-1:-1;;;1228:57:12;;1242:42;1228:57;;;352:51:14;-1:-1:-1;;;;;1228:2:12;;;;-1:-1:-1;1228:13:12;;-1:-1:-1;325:18:14;;1228:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1304:88:12;;;;;;;;;;;-1:-1:-1;;;1304:88:12;;;;1333:4;;:58;;-1:-1:-1;;;1333:58:12;;1348:42;1333:58;;;352:51:14;1304:88:12;;-1:-1:-1;1304:88:12;;-1:-1:-1;;;;;;1333:4:12;;;;:14;;325:18:14;;1333:58:12;206:203:14;1304:88:12;1470:11;;1403:87;;-1:-1:-1;;;1403:87:12;;1470:11;;;;-1:-1:-1;;;;;1470:11:12;1403:87;;;788:51:14;1484:5:12;855:18:14;;;848:34;1410:42:12;;1403:58;;761:18:14;;1403:87:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1567:11:12;;1500:87;;-1:-1:-1;;;1500:87:12;;1567:11;;;;-1:-1:-1;;;;;1567:11:12;1500:87;;;788:51:14;1581:5:12;855:18:14;;;848:34;1507:42:12;;1500:58;;761:18:14;;1500:87:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1598:69:12;;;;;;;;;;;;;;;;1638:3;;:28;;-1:-1:-1;;;1638:28:12;;1660:4;1638:28;;;352:51:14;1598:69:12;;-1:-1:-1;;;;;1638:3:12;;:13;;325:18:14;;1638:28:12;206:203:14;1598:69:12;1677:71;;;;;;;;;;;;;;;;1718:4;;:29;;-1:-1:-1;;;1718:29:12;;1741:4;1718:29;;;352:51:14;1677:71:12;;-1:-1:-1;;;;;1718:4:12;;:14;;325:18:14;;1718:29:12;206:203:14;1677:71:12;1759:11;;;:128;;-1:-1:-1;;;1759:128:12;;1776:42;1759:128;;;2075:34:14;1819:42:12;2125:18:14;;;2118:43;1863:5:12;2177:18:14;;;2170:34;2220:18;;;2213:34;;;;1881:4:12;2263:19:14;;;2256:44;1759:11:12;;;-1:-1:-1;;;;;1759:11:12;;:16;;2009:19:14;;1759:128:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1898:33;;;;;;;;;;;;;;-1:-1:-1;;;1898:33:12;;;:11;:33::i;:::-;1954:4;;:29;;-1:-1:-1;;;1954:29:12;;1977:4;1954:29;;;352:51:14;1942:42:12;;-1:-1:-1;;;;;1954:4:12;;:14;;325:18:14;;1954:29:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1942:11;:42::i;:::-;2006:3;;:28;;-1:-1:-1;;;2006:28:12;;2028:4;2006:28;;;352:51:14;1994:41:12;;-1:-1:-1;;;;;2006:3:12;;:13;;325:18:14;;2006:28:12;206:203:14;1994:41:12;2046:2;;;;;;;;;-1:-1:-1;;;;;2046:2:12;-1:-1:-1;;;;;2046:12:12;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2083:3:12;;:28;;-1:-1:-1;;;2083:28:12;;2105:4;2083:28;;;352:51:14;2072:49:12;;-1:-1:-1;2115:5:12;;-1:-1:-1;;;;;;2083:3:12;;;;:13;;325:18:14;;2083:28:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;2072:10;:49::i;6661:142:13:-;6728:68;6788:2;6792;6744:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6744:51:13;;;;;;;;;;;;;;-1:-1:-1;;;;;6744:51:13;-1:-1:-1;;;6744:51:13;;;6728:15;:68::i;:::-;6661:142;;:::o;5728:121::-;5783:59;5838:2;5799:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5799:42:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5799:42:13;-1:-1:-1;;;5799:42:13;;;5783:15;:59::i;:::-;5728:121;:::o;2046:157:0:-;2106:9;2101:96;;2136:30;;;;;3511:2:14;3493:21;;;3550:2;3530:18;;;3523:30;3589:25;3584:2;3569:18;;3562:53;3647:2;3632:18;;3309:347;2136:30:0;;;;;;;;2180:6;1853;:13;;-1:-1:-1;;1853:13:0;;;;;1818:55;5609:113:13;5658:57;5711:2;5674:40;;;;;;3807:25:14;;3795:2;3780:18;;3661:177;5674:40:13;;;;-1:-1:-1;;5674:40:13;;;;;;;;;;;;;;-1:-1:-1;;;;;5674:40:13;-1:-1:-1;;;5674:40:13;;;203:443;297:14;;153:42;427:2;414:16;;273:21;;297:14;414:16;153:42;480:5;452:178;443:187;;380:260;;203:443;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;414:184:14:-;484:6;537:2;525:9;516:7;512:23;508:32;505:52;;;553:1;550;543:12;505:52;-1:-1:-1;576:16:14;;414:184;-1:-1:-1;414:184:14:o;893:277::-;960:6;1013:2;1001:9;992:7;988:23;984:32;981:52;;;1029:1;1026;1019:12;981:52;1061:9;1055:16;1114:5;1107:13;1100:21;1093:5;1090:32;1080:60;;1136:1;1133;1126:12;1080:60;1159:5;893:277;-1:-1:-1;;;893:277:14:o;2311:472::-;2353:3;2391:5;2385:12;2418:6;2413:3;2406:19;2443:1;2453:162;2467:6;2464:1;2461:13;2453:162;;;2529:4;2585:13;;;2581:22;;2575:29;2557:11;;;2553:20;;2546:59;2482:12;2453:162;;;2633:6;2630:1;2627:13;2624:87;;;2699:1;2692:4;2683:6;2678:3;2674:16;2670:27;2663:38;2624:87;-1:-1:-1;2765:2:14;2744:15;-1:-1:-1;;2740:29:14;2731:39;;;;2772:4;2727:50;;2311:472;-1:-1:-1;;2311:472:14:o;2788:291::-;2965:2;2954:9;2947:21;2928:4;2985:45;3026:2;3015:9;3011:18;3003:6;2985:45;:::i;:::-;2977:53;;3066:6;3061:2;3050:9;3046:18;3039:34;2788:291;;;;;:::o;3084:220::-;3233:2;3222:9;3215:21;3196:4;3253:45;3294:2;3283:9;3279:18;3271:6;3253:45;:::i",
    "sourcePath": "/home/chinmay/ethonline/88mph/Phantasm/src/test/SpookySwap.t.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.11+commit.d7f03943"
    },
    "ast": {
        "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/test/SpookySwap.t.sol",
        "exportedSymbols": {
            "DSTest": [
                1680
            ],
            "GeistImplementation": [
                2725
            ],
            "IERC20": [
                3356
            ],
            "ILendingPool": [
                3066
            ],
            "SpookySwapper": [
                1938
            ],
            "SpookySwapperTest": [
                4823
            ],
            "Vm": [
                4549
            ],
            "console": [
                12887
            ]
        },
        "id": 4824,
        "license": "Unlicense",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 4526,
                "literals": [
                    "solidity",
                    "0.8",
                    ".11"
                ],
                "nodeType": "PragmaDirective",
                "src": "38:23:12"
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/test/utils/console.sol",
                "file": "./utils/console.sol",
                "id": 4527,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 12888,
                "src": "63:29:12",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/lib/ds-test/src/test.sol",
                "file": "../../lib/ds-test/src/test.sol",
                "id": 4528,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 1681,
                "src": "93:40:12",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/SpookySwap.sol",
                "file": "../SpookySwap.sol",
                "id": 4530,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 1939,
                "src": "134:48:12",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4529,
                            "name": "SpookySwapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "src": "142:13:12",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IERC20.sol",
                "file": "../interfaces/IERC20.sol",
                "id": 4532,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 3357,
                "src": "183:48:12",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4531,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "src": "191:6:12",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/geistImplementation.sol",
                "file": "../geistImplementation.sol",
                "id": 4534,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 2726,
                "src": "232:63:12",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 4533,
                            "name": "GeistImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "src": "240:19:12",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/chinmay/ethonline/88mph/Phantasm/src/interfaces/IAave.sol",
                "file": "../interfaces/IAave.sol",
                "id": 4535,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 4824,
                "sourceUnit": 3067,
                "src": "296:33:12",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "Vm",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 4549,
                "linearizedBaseContracts": [
                    4549
                ],
                "name": "Vm",
                "nameLocation": "341:2:12",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "ca669fa7",
                        "id": 4540,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "prank",
                        "nameLocation": "358:5:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4538,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4537,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4540,
                                    "src": "364:7:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 4536,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "364:7:12",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "363:9:12"
                        },
                        "returnParameters": {
                            "id": 4539,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "381:0:12"
                        },
                        "scope": 4549,
                        "src": "349:33:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "06447d56",
                        "id": 4545,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "startPrank",
                        "nameLocation": "396:10:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4543,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 4542,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4545,
                                    "src": "407:7:12",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 4541,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "407:7:12",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "406:9:12"
                        },
                        "returnParameters": {
                            "id": 4544,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "424:0:12"
                        },
                        "scope": 4549,
                        "src": "387:38:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "90c5013b",
                        "id": 4548,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "stopPrank",
                        "nameLocation": "439:9:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4546,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "448:2:12"
                        },
                        "returnParameters": {
                            "id": 4547,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "459:0:12"
                        },
                        "scope": 4549,
                        "src": "430:30:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 4824,
                "src": "331:131:12",
                "usedErrors": []
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4550,
                            "name": "DSTest",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1680,
                            "src": "493:6:12"
                        },
                        "id": 4551,
                        "nodeType": "InheritanceSpecifier",
                        "src": "493:6:12"
                    }
                ],
                "canonicalName": "SpookySwapperTest",
                "contractDependencies": [
                    1938,
                    2725
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 4823,
                "linearizedBaseContracts": [
                    4823,
                    1680
                ],
                "name": "SpookySwapperTest",
                "nameLocation": "472:17:12",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 4554,
                        "mutability": "mutable",
                        "name": "testSwapper",
                        "nameLocation": "519:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "505:25:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                            "typeString": "contract SpookySwapper"
                        },
                        "typeName": {
                            "id": 4553,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4552,
                                "name": "SpookySwapper",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1938,
                                "src": "505:13:12"
                            },
                            "referencedDeclaration": 1938,
                            "src": "505:13:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                "typeString": "contract SpookySwapper"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 4557,
                        "mutability": "mutable",
                        "name": "test",
                        "nameLocation": "556:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "536:24:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                            "typeString": "contract GeistImplementation"
                        },
                        "typeName": {
                            "id": 4556,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4555,
                                "name": "GeistImplementation",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2725,
                                "src": "536:19:12"
                            },
                            "referencedDeclaration": 2725,
                            "src": "536:19:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                "typeString": "contract GeistImplementation"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 4560,
                        "mutability": "mutable",
                        "name": "dai",
                        "nameLocation": "575:3:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "567:11:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3356",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 4559,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4558,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3356,
                                "src": "567:6:12"
                            },
                            "referencedDeclaration": 3356,
                            "src": "567:6:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 4563,
                        "mutability": "mutable",
                        "name": "TOMB",
                        "nameLocation": "592:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "584:12:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3356",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 4562,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4561,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3356,
                                "src": "584:6:12"
                            },
                            "referencedDeclaration": 3356,
                            "src": "584:6:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 4566,
                        "mutability": "mutable",
                        "name": "WFTM",
                        "nameLocation": "610:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "602:12:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$3356",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 4565,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4564,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3356,
                                "src": "602:6:12"
                            },
                            "referencedDeclaration": 3356,
                            "src": "602:6:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 4572,
                        "mutability": "mutable",
                        "name": "vm",
                        "nameLocation": "624:2:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 4823,
                        "src": "621:54:12",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$4549",
                            "typeString": "contract Vm"
                        },
                        "typeName": {
                            "id": 4568,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 4567,
                                "name": "Vm",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4549,
                                "src": "621:2:12"
                            },
                            "referencedDeclaration": 4549,
                            "src": "621:2:12",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$4549",
                                "typeString": "contract Vm"
                            }
                        },
                        "value": {
                            "arguments": [
                                {
                                    "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                                    "id": 4570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "632:42:12",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                                }
                            ],
                            "expression": {
                                "argumentTypes": [
                                    {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                ],
                                "id": 4569,
                                "name": "Vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4549,
                                "src": "629:2:12",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Vm_$4549_$",
                                    "typeString": "type(contract Vm)"
                                }
                            },
                            "id": 4571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "629:46:12",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$4549",
                                "typeString": "contract Vm"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 4607,
                            "nodeType": "Block",
                            "src": "706:292:12",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 4580,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 4575,
                                            "name": "testSwapper",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4554,
                                            "src": "716:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                "typeString": "contract SpookySwapper"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 4578,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "730:17:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SpookySwapper_$1938_$",
                                                    "typeString": "function () returns (contract SpookySwapper)"
                                                },
                                                "typeName": {
                                                    "id": 4577,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 4576,
                                                        "name": "SpookySwapper",
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 1938,
                                                        "src": "734:13:12"
                                                    },
                                                    "referencedDeclaration": 1938,
                                                    "src": "734:13:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                        "typeString": "contract SpookySwapper"
                                                    }
                                                }
                                            },
                                            "id": 4579,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "730:19:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                "typeString": "contract SpookySwapper"
                                            }
                                        },
                                        "src": "716:33:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                            "typeString": "contract SpookySwapper"
                                        }
                                    },
                                    "id": 4581,
                                    "nodeType": "ExpressionStatement",
                                    "src": "716:33:12"
                                },
                                {
                                    "expression": {
                                        "id": 4587,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 4582,
                                            "name": "test",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4557,
                                            "src": "759:4:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                "typeString": "contract GeistImplementation"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 4585,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "766:23:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GeistImplementation_$2725_$",
                                                    "typeString": "function () returns (contract GeistImplementation)"
                                                },
                                                "typeName": {
                                                    "id": 4584,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 4583,
                                                        "name": "GeistImplementation",
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 2725,
                                                        "src": "770:19:12"
                                                    },
                                                    "referencedDeclaration": 2725,
                                                    "src": "770:19:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                        "typeString": "contract GeistImplementation"
                                                    }
                                                }
                                            },
                                            "id": 4586,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "766:25:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                "typeString": "contract GeistImplementation"
                                            }
                                        },
                                        "src": "759:32:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                            "typeString": "contract GeistImplementation"
                                        }
                                    },
                                    "id": 4588,
                                    "nodeType": "ExpressionStatement",
                                    "src": "759:32:12"
                                },
                                {
                                    "expression": {
                                        "id": 4593,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 4589,
                                            "name": "dai",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4560,
                                            "src": "801:3:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "307838443131654333386133454235453935364230353266363744613842646339626566384162663345",
                                                    "id": 4591,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "814:42:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "value": "0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 4590,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3356,
                                                "src": "807:6:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                    "typeString": "type(contract IERC20)"
                                                }
                                            },
                                            "id": 4592,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "807:50:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "801:56:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 4594,
                                    "nodeType": "ExpressionStatement",
                                    "src": "801:56:12"
                                },
                                {
                                    "expression": {
                                        "id": 4599,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 4595,
                                            "name": "TOMB",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4563,
                                            "src": "867:4:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "307836633032314165383232424561393433623245363635353262446531443236393661353366624237",
                                                    "id": 4597,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "881:42:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "value": "0x6c021Ae822BEa943b2E66552bDe1D2696a53fbB7"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 4596,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3356,
                                                "src": "874:6:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                    "typeString": "type(contract IERC20)"
                                                }
                                            },
                                            "id": 4598,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "874:50:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "867:57:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 4600,
                                    "nodeType": "ExpressionStatement",
                                    "src": "867:57:12"
                                },
                                {
                                    "expression": {
                                        "id": 4605,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 4601,
                                            "name": "WFTM",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4566,
                                            "src": "934:4:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "hexValue": "307832316265333730443533313266343463423432636533373742433962386130634546314134433833",
                                                    "id": 4603,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "948:42:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "value": "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 4602,
                                                "name": "IERC20",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3356,
                                                "src": "941:6:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                    "typeString": "type(contract IERC20)"
                                                }
                                            },
                                            "id": 4604,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "941:50:12",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "934:57:12",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 4606,
                                    "nodeType": "ExpressionStatement",
                                    "src": "934:57:12"
                                }
                            ]
                        },
                        "functionSelector": "0a9254e4",
                        "id": 4608,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setUp",
                        "nameLocation": "691:5:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4573,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "696:2:12"
                        },
                        "returnParameters": {
                            "id": 4574,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "706:0:12"
                        },
                        "scope": 4823,
                        "src": "682:316:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 4754,
                            "nodeType": "Block",
                            "src": "1031:1098:12",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307830323531373431314633326163323438313735336144333034356341313944353865343438413031",
                                                "id": 4614,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1055:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0x02517411F32ac2481753aD3045cA19D58e448A01"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4611,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "1041:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4613,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "startPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4545,
                                            "src": "1041:13:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address) external"
                                            }
                                        },
                                        "id": 4615,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1041:57:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4616,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1041:57:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307864446631363942663232386536443665373031313830453265366632393037333936363361373834",
                                                "id": 4621,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1140:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0xdDf169Bf228e6D6e701180E2e6f290739663a784"
                                            },
                                            {
                                                "hexValue": "313030303030",
                                                "id": 4622,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1184:6:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100000_by_1",
                                                    "typeString": "int_const 100000"
                                                },
                                                "value": "100000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_100000_by_1",
                                                    "typeString": "int_const 100000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 4618,
                                                        "name": "TOMB",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4563,
                                                        "src": "1125:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    ],
                                                    "id": 4617,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3356,
                                                    "src": "1118:6:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 4619,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1118:12:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$3356",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 4620,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3305,
                                            "src": "1118:21:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 4623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1118:73:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 4624,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1118:73:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 4625,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "1203:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4627,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "stopPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4548,
                                            "src": "1203:12:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 4628,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1203:14:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4629,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1203:14:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307864446631363942663232386536443665373031313830453265366632393037333936363361373834",
                                                "id": 4633,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1242:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0xdDf169Bf228e6D6e701180E2e6f290739663a784"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4630,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "1228:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4632,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "startPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4545,
                                            "src": "1228:13:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address) external"
                                            }
                                        },
                                        "id": 4634,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1228:57:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4635,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1228:57:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "544f4d422062616c616e636520",
                                                "id": 4639,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1316:15:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7bd063952c03c8bebc4b0bd6580410f70bf400a638fd4798dded7112877e0caa",
                                                    "typeString": "literal_string \"TOMB balance \""
                                                },
                                                "value": "TOMB balance "
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "307864446631363942663232386536443665373031313830453265366632393037333936363361373834",
                                                        "id": 4642,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1348:42:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0xdDf169Bf228e6D6e701180E2e6f290739663a784"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4640,
                                                        "name": "TOMB",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4563,
                                                        "src": "1333:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4641,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "1333:14:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4643,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1333:58:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_7bd063952c03c8bebc4b0bd6580410f70bf400a638fd4798dded7112877e0caa",
                                                    "typeString": "literal_string \"TOMB balance \""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4636,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1304:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4638,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5531,
                                            "src": "1304:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256) view"
                                            }
                                        },
                                        "id": 4644,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1304:88:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4645,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1304:88:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 4652,
                                                        "name": "testSwapper",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4554,
                                                        "src": "1470:11:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                            "typeString": "contract SpookySwapper"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                            "typeString": "contract SpookySwapper"
                                                        }
                                                    ],
                                                    "id": 4651,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1462:7:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 4650,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1462:7:12",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 4653,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1462:20:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "3130303030",
                                                "id": 4654,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1484:5:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                },
                                                "value": "10000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "307836633032314165383232424561393433623245363635353262446531443236393661353366624237",
                                                        "id": 4647,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1410:42:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0x6c021Ae822BEa943b2E66552bDe1D2696a53fbB7"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 4646,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3356,
                                                    "src": "1403:6:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 4648,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1403:50:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$3356",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 4649,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3325,
                                            "src": "1403:58:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 4655,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1403:87:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 4656,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1403:87:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 4663,
                                                        "name": "testSwapper",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4554,
                                                        "src": "1567:11:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                            "typeString": "contract SpookySwapper"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                            "typeString": "contract SpookySwapper"
                                                        }
                                                    ],
                                                    "id": 4662,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1559:7:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 4661,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1559:7:12",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 4664,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1559:20:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "3130303030",
                                                "id": 4665,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1581:5:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                },
                                                "value": "10000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "307836633032314165383232424561393433623245363635353262446531443236393661353366624237",
                                                        "id": 4658,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1507:42:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0x6c021Ae822BEa943b2E66552bDe1D2696a53fbB7"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 4657,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3356,
                                                    "src": "1500:6:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 4659,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1500:50:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$3356",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 4660,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3325,
                                            "src": "1500:58:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 4666,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1500:87:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 4667,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1500:87:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4265666f72652073776170206461692062616c616e6365",
                                                "id": 4671,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1610:25:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_96b76cf36d7df0650c3fb9d92d2b4449127c3c0eb7b264ce6724064e344681dc",
                                                    "typeString": "literal_string \"Before swap dai balance\""
                                                },
                                                "value": "Before swap dai balance"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 4676,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "1660:4:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            ],
                                                            "id": 4675,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1652:7:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 4674,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1652:7:12",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 4677,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1652:13:12",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4672,
                                                        "name": "dai",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4560,
                                                        "src": "1638:3:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4673,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "1638:13:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4678,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1638:28:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_96b76cf36d7df0650c3fb9d92d2b4449127c3c0eb7b264ce6724064e344681dc",
                                                    "typeString": "literal_string \"Before swap dai balance\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4668,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1598:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4670,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5531,
                                            "src": "1598:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256) view"
                                            }
                                        },
                                        "id": 4679,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1598:69:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4680,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1598:69:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "4265666f7265207377617020544f4d422062616c616e6365",
                                                "id": 4684,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1689:26:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_056a3008a44b408b4158a042609d05f123a1d45e99b35ef7e412ecb8ed2624d1",
                                                    "typeString": "literal_string \"Before swap TOMB balance\""
                                                },
                                                "value": "Before swap TOMB balance"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 4689,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "1741:4:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            ],
                                                            "id": 4688,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1733:7:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 4687,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1733:7:12",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 4690,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1733:13:12",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4685,
                                                        "name": "TOMB",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4563,
                                                        "src": "1718:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4686,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "1718:14:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4691,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1718:29:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_056a3008a44b408b4158a042609d05f123a1d45e99b35ef7e412ecb8ed2624d1",
                                                    "typeString": "literal_string \"Before swap TOMB balance\""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4681,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1677:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4683,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5531,
                                            "src": "1677:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256) view"
                                            }
                                        },
                                        "id": 4692,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1677:71:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4693,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1677:71:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307836633032314165383232424561393433623245363635353262446531443236393661353366624237",
                                                "id": 4697,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1776:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0x6c021Ae822BEa943b2E66552bDe1D2696a53fbB7"
                                            },
                                            {
                                                "hexValue": "307838443131654333386133454235453935364230353266363744613842646339626566384162663345",
                                                "id": 4698,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1819:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"
                                            },
                                            {
                                                "hexValue": "3130303030",
                                                "id": 4699,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1863:5:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                },
                                                "value": "10000"
                                            },
                                            {
                                                "hexValue": "30",
                                                "id": 4700,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1870:1:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 4703,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1881:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                            "typeString": "contract SpookySwapperTest"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                            "typeString": "contract SpookySwapperTest"
                                                        }
                                                    ],
                                                    "id": 4702,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1873:7:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 4701,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1873:7:12",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 4704,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1873:13:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4694,
                                                "name": "testSwapper",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4554,
                                                "src": "1759:11:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_SpookySwapper_$1938",
                                                    "typeString": "contract SpookySwapper"
                                                }
                                            },
                                            "id": 4696,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "Swap",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1836,
                                            "src": "1759:16:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                                                "typeString": "function (address,address,uint256,uint256,address) external"
                                            }
                                        },
                                        "id": 4705,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1759:128:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4706,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1759:128:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "616674657220737761702062616c616e6365",
                                                "id": 4710,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1910:20:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_06efdc3b54477adc934a30e55653e97496695444b6ce51f14035e1c2815fb874",
                                                    "typeString": "literal_string \"after swap balance\""
                                                },
                                                "value": "after swap balance"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_06efdc3b54477adc934a30e55653e97496695444b6ce51f14035e1c2815fb874",
                                                    "typeString": "literal_string \"after swap balance\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 4707,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1898:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4709,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5418,
                                            "src": "1898:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 4711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1898:33:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4712,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1898:33:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 4720,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "1977:4:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            ],
                                                            "id": 4719,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "1969:7:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 4718,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "1969:7:12",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 4721,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "1969:13:12",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4716,
                                                        "name": "TOMB",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4563,
                                                        "src": "1954:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4717,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "1954:14:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4722,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1954:29:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4713,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1942:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4715,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5404,
                                            "src": "1942:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256) view"
                                            }
                                        },
                                        "id": 4723,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1942:42:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4724,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1942:42:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 4732,
                                                                "name": "this",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967268,
                                                                "src": "2028:4:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                    "typeString": "contract SpookySwapperTest"
                                                                }
                                                            ],
                                                            "id": 4731,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "2020:7:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 4730,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "2020:7:12",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 4733,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2020:13:12",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4728,
                                                        "name": "dai",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4560,
                                                        "src": "2006:3:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4729,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "2006:13:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4734,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2006:28:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4725,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "1994:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4727,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5404,
                                            "src": "1994:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256) view"
                                            }
                                        },
                                        "id": 4735,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1994:41:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4736,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1994:41:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 4737,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "2046:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4739,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "stopPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4548,
                                            "src": "2046:12:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 4740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2046:14:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4741,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2046:14:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 4751,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 4747,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "2105:4:12",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                        "typeString": "contract SpookySwapperTest"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_SpookySwapperTest_$4823",
                                                                        "typeString": "contract SpookySwapperTest"
                                                                    }
                                                                ],
                                                                "id": 4746,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "2097:7:12",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 4745,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "2097:7:12",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 4748,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2097:13:12",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 4743,
                                                            "name": "dai",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4560,
                                                            "src": "2083:3:12",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$3356",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "id": 4744,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3295,
                                                        "src": "2083:13:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 4749,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2083:28:12",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "hexValue": "3130303030",
                                                    "id": 4750,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2115:5:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                        "typeString": "int_const 10000"
                                                    },
                                                    "value": "10000"
                                                },
                                                "src": "2083:37:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 4742,
                                            "name": "assertTrue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                163,
                                                184
                                            ],
                                            "referencedDeclaration": 163,
                                            "src": "2072:10:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool)"
                                            }
                                        },
                                        "id": 4752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2072:49:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4753,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2072:49:12"
                                }
                            ]
                        },
                        "functionSelector": "6e008a03",
                        "id": 4755,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "testSwap",
                        "nameLocation": "1013:8:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4609,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1021:2:12"
                        },
                        "returnParameters": {
                            "id": 4610,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1031:0:12"
                        },
                        "scope": 4823,
                        "src": "1004:1125:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 4821,
                            "nodeType": "Block",
                            "src": "3343:684:12",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307836416233306431323463663233614561456439416666383838376232453733663033343739366361",
                                                "id": 4761,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3374:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0x6Ab30d124cf23aEaEd9Aff8887b2E73f034796ca"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4758,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "3360:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4760,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "startPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4545,
                                            "src": "3360:13:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address) external"
                                            }
                                        },
                                        "id": 4762,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3360:57:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4763,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3360:57:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "6461692062616c616e636520",
                                                "id": 4767,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3470:14:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ec63ec7966d19188fccbcdb8503e422a7ef2402d04324d6cd53a9785e982fc7a",
                                                    "typeString": "literal_string \"dai balance \""
                                                },
                                                "value": "dai balance "
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "hexValue": "307862364538323537323744614531653338383636333946416132396241636636323345384564393145",
                                                        "id": 4770,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3500:42:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0xb6E825727DaE1e3886639FAa29bAcf623E8Ed91E"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 4768,
                                                        "name": "dai",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4560,
                                                        "src": "3486:3:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$3356",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "id": 4769,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "balanceOf",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3295,
                                                    "src": "3486:13:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                },
                                                "id": 4771,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3486:57:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_ec63ec7966d19188fccbcdb8503e422a7ef2402d04324d6cd53a9785e982fc7a",
                                                    "typeString": "literal_string \"dai balance \""
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4764,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "3458:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4766,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5531,
                                            "src": "3458:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                                "typeString": "function (string memory,uint256) view"
                                            }
                                        },
                                        "id": 4772,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3458:86:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4773,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3458:86:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "776520696e206272656f697331",
                                                "id": 4777,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3712:15:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4c7e62eb8143425584194ef715466cef2a68ff11f5d857736441fee5327fbdca",
                                                    "typeString": "literal_string \"we in breois1\""
                                                },
                                                "value": "we in breois1"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_4c7e62eb8143425584194ef715466cef2a68ff11f5d857736441fee5327fbdca",
                                                    "typeString": "literal_string \"we in breois1\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 4774,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "3700:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4776,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5418,
                                            "src": "3700:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 4778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3700:28:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4779,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3700:28:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 4786,
                                                        "name": "test",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4557,
                                                        "src": "3807:4:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                            "typeString": "contract GeistImplementation"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                            "typeString": "contract GeistImplementation"
                                                        }
                                                    ],
                                                    "id": 4785,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3799:7:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 4784,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3799:7:12",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 4787,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3799:13:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "31303030",
                                                "id": 4788,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3814:4:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000_by_1",
                                                    "typeString": "int_const 1000"
                                                },
                                                "value": "1000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1000_by_1",
                                                    "typeString": "int_const 1000"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "hexValue": "307838443131654333386133454235453935364230353266363744613842646339626566384162663345",
                                                        "id": 4781,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "3747:42:12",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "value": "0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 4780,
                                                    "name": "IERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 3356,
                                                    "src": "3740:6:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$3356_$",
                                                        "typeString": "type(contract IERC20)"
                                                    }
                                                },
                                                "id": 4782,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3740:50:12",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$3356",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 4783,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "approve",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3325,
                                            "src": "3740:58:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 4789,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3740:79:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 4790,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3740:79:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "616674657220617070726f7665",
                                                "id": 4794,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3841:15:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_a1ab4804050cff59c95926b166802ad259669014eb47e0530e080a95d549471a",
                                                    "typeString": "literal_string \"after approve\""
                                                },
                                                "value": "after approve"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_a1ab4804050cff59c95926b166802ad259669014eb47e0530e080a95d549471a",
                                                    "typeString": "literal_string \"after approve\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 4791,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "3829:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4793,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5418,
                                            "src": "3829:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 4795,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3829:28:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4796,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3829:28:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "307838443131654333386133454235453935364230353266363744613842646339626566384162663345",
                                                "id": 4800,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3881:42:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "value": "0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"
                                            },
                                            {
                                                "hexValue": "31303030",
                                                "id": 4801,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3925:4:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000_by_1",
                                                    "typeString": "int_const 1000"
                                                },
                                                "value": "1000"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1000_by_1",
                                                    "typeString": "int_const 1000"
                                                }
                                            ],
                                            "expression": {
                                                "id": 4797,
                                                "name": "test",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4557,
                                                "src": "3868:4:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_GeistImplementation_$2725",
                                                    "typeString": "contract GeistImplementation"
                                                }
                                            },
                                            "id": 4799,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "deposit",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2452,
                                            "src": "3868:12:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256) external"
                                            }
                                        },
                                        "id": 4802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3868:62:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4803,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3868:62:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "776520696e20626f6973",
                                                "id": 4807,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3953:12:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c9cec93346cc252800d7a1f6a998d8c7bd6713d27eaac88e738841217e1a43c2",
                                                    "typeString": "literal_string \"we in bois\""
                                                },
                                                "value": "we in bois"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_c9cec93346cc252800d7a1f6a998d8c7bd6713d27eaac88e738841217e1a43c2",
                                                    "typeString": "literal_string \"we in bois\""
                                                }
                                            ],
                                            "expression": {
                                                "id": 4804,
                                                "name": "console",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12887,
                                                "src": "3941:7:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_console_$12887_$",
                                                    "typeString": "type(library console)"
                                                }
                                            },
                                            "id": 4806,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "log",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 5418,
                                            "src": "3941:11:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) view"
                                            }
                                        },
                                        "id": 4808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3941:25:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4809,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3941:25:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 4810,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4572,
                                                "src": "3977:2:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$4549",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 4812,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "stopPrank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 4548,
                                            "src": "3977:12:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 4813,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3977:14:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4814,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3977:14:12"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                },
                                                "id": 4818,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "31",
                                                    "id": 4816,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4015:1:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "hexValue": "32",
                                                    "id": 4817,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "4017:1:12",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_2_by_1",
                                                        "typeString": "int_const 2"
                                                    },
                                                    "value": "2"
                                                },
                                                "src": "4015:3:12",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 4815,
                                            "name": "assertTrue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                163,
                                                184
                                            ],
                                            "referencedDeclaration": 163,
                                            "src": "4004:10:12",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                                "typeString": "function (bool)"
                                            }
                                        },
                                        "id": 4819,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4004:15:12",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 4820,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4004:15:12"
                                }
                            ]
                        },
                        "functionSelector": "55db943c",
                        "id": 4822,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "testLender",
                        "nameLocation": "3323:10:12",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 4756,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3333:2:12"
                        },
                        "returnParameters": {
                            "id": 4757,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3343:0:12"
                        },
                        "scope": 4823,
                        "src": "3314:713:12",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 4824,
                "src": "463:3567:12",
                "usedErrors": []
            }
        ],
        "src": "38:4447:12"
    },
    "functionHashes": {
        "IS_TEST()": "fa7626d4",
        "failed()": "ba414fa6",
        "setUp()": "0a9254e4",
        "testLender()": "55db943c",
        "testSwap()": "6e008a03"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2589400",
            "executionCost": "51261",
            "totalCost": "2640661"
        },
        "external": {
            "IS_TEST()": "2364",
            "failed()": "2353",
            "setUp()": "infinite",
            "testLender()": "infinite",
            "testSwap()": "infinite"
        }
    }
}